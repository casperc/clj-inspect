cmdhistory=["(test-it)" "a" "@a" "(print-timing-report @a)" "(test-it)" "@a" "(test-it)" "@a" "(conj nil 1)" "(pop [1 2])" "(pop nil)" "(test-it)" "(pop [])" "(test-it)" "(pop-current pop-current-args)" "pop-current-args" "(test-it)" "@a" "(def history (agent ()))\\n(def droid (agent (struct item \\"Droid X\\" 0)))\\n\\n\\n(defn place-offer [offer] (send droid \#(assoc % \:current-price (get offer \:amount))))\\n\\n(place-offer {\:user \\"Tony\\" \:amount 33})\\n\\n(await droid)\\n(println @droid)" "(def history (agent ()))\\n(def droid (agent (struct item \\"Droid X\\" 0)))" "(test-it)" "(with-record-redefs [a [\#'testfn \#'doubler \#'waiter]]\\n    (prn \\"record\:\\")\\n    (prn \\"1\: \\" (testfn 1))\\n    (prn \\"2\: \\" (doubler 4))\\n    (prn \\"3\: \\" (testfn 2)))" "(test-it)" "(with-record-redefs [a [\#'testfn \#'doubler \#'waiter]]\\n    (prn \\"record\:\\")\\n    (prn \\"1\: \\" (testfn 1))\\n    (prn \\"2\: \\" (doubler 4))\\n    (prn \\"3\: \\" (testfn 2)))" "(test-it)" "(time (test-it))" "(time (with-record-redefs [a [\#'testfn \#'doubler \#'waiter]]\\n         (prn \\"record\:\\")\\n         (prn \\"1\: \\" (testfn 1))\\n         (prn \\"2\: \\" (doubler 4))\\n         (prn \\"3\: \\" (testfn 2))))" "(print-timing-report @a)" "(time (test-it))" "(print-timing-report @a)" "(time (test-it))\\n(print-timing-report @a)" "(test-it)" "(do-test)" "(def a (atom {}))\\n(with-record-redefs [a (find-namespaces \#\\".*\\")]\\n  )" "(find-namespaces \#\\".*\\")" "(find-vars-in-namespaces (find-namespaces \#\\".*\\"))" "(count (find-vars-in-namespaces (find-namespaces \#\\".*\\")))" "(count (find-namespaces \#\\".*\\"))" "(count (apply concat (keys (find-vars-in-namespaces (find-namespaces \#\\".*\\")))))" "(count (apply concat (vals (find-vars-in-namespaces (find-namespaces \#\\".*\\")))))" "(count (find-vars-in-namespaces (find-namespaces \#\\".*\\")))" "(find-vars-in-namespaces (find-namespaces \#\\".*\\"))" "(count (find-vars-in-namespaces (find-namespaces \#\\".*\\")))" "(do-test)" "a" "(do-test)" "(def g\\n    {\:a [\:b \:c]\\n         \:b [\:c]\\n         \:c [\:a]})" "(view-graph (keys g) g\\n    \:node->descriptor (fn [n] {\:label n}))" "(v/view-graph (keys g) g\\n    \:node->descriptor (fn [n] {\:label n}))" "(v/view-graph (keys g) g \:node->descriptor (fn [n] {\:label n}))"]
eclipse.preferences.version=1
